(defwidget center_dock []
  (revealer :transition "slidedown" :reveal {open_center_dock} :duration {ANIM_DURATION}
    (box :orientation "h" :space-evenly false :class "dock"
      (box :orientation "h" :space-evenly false :spacing 10 :class "dock-box"
        (box 
          :class "calendar"
          (calendar)
        )
        (weather)
      )
    )
  )
)

(defwidget weather []
  (box 
    :class "weather" 
    :orientation "v" 
    :space-evenly false
    (box 
      :orientation "h" 
      :space-evenly false
      :spacing 50
      (box 
        :class "first-column"
        :orientation "v" 
        :halign "start"
        :space-evenly false
        :spacing 20
        (label :class "city" :text {" " + weather.city} :xalign 0)
        (temp)
      )
      (box 
        :class "second-column"
        :orientation "v" 
        :halign "end"
        :spacing 10
        :space-evenly false
        (label 
          :class "description" 
          :text {weather.description} 
          :xalign 1
        )
        (label 
          :class "weather-icon" 
          :text {weather.icon} 
          :yalign 1
        )
      )
    )
    (box
    :orientation "h" 
    :class "more-detail"
    :space-evenly false
    :spacing 10
      (label :class "weather-indicator" :text "Humidity: ${weather.humidity}%")
      (label :class "weather-indicator" :text "Feels like: ${round(weather.feels_like, 1)}°C")
    )
  )
)

(defwidget temp []
  (box 
    :orientation "h" 
    :space-evenly false
    (label :class "temp" :text "${round(weather.temp, 0)} °C" :xalign 0) 
    (box 
      :spacing 5 
      :orientation "v" 
      :class "min_max" 
      :halign "center"
      (box 
        :space-evenly false 
        (label :class "max-icon"  :text "") 
        (label :class "max" :text "${round(weather.temp_max, 1)} °C")
      )
      (box 
        :space-evenly false 
        (label :class "min-icon" :text "") 
        (label :class "min" :text "${round(weather.temp_min, 1)} °C")
      )
    )
  )
)

(defwidget system_progress [data icon css tip] 
  (box 
    :class "progress" 
    (circular-progress
      :class css
      :value data
      :thickness 12
      :tooltip tip
      (overlay
        :valign "center"
        (label 
          :class "icon" 
          :text icon
        )
      )
    )
  )
)

(defwidget sys_info []
  (box
    :class "sys"
    (system_progress
      :css "cpu"
      :tip "CPU ${round(EWW_CPU.avg,0)}%"
      :data {round(EWW_CPU.avg, 0)} 
      :icon ""
    )
    (system_progress
      :css "ram"
      :tip "RAM ${round(EWW_RAM.used_mem / 1048576, 2)}MB"
      :data {round(EWW_RAM.used_mem_perc, 0)}
      :icon ""
    )
    (system_progress
      :css "disk"
      :tip "SSD ${round(EWW_DISK["/"].used_perc, 2)}%"
      :data {round(EWW_DISK["/"].used_perc, 0)}
      :icon ""
    )
  )
)

